import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:firebase-appdistribution-gradle:4.0.0'
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.22.0"
    }
}

plugins {
    id 'com.android.application' version '7.4.0' apply false
    id 'com.android.library' version '7.4.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.21' apply false
    id 'io.gitlab.arturbosch.detekt' version '1.22.0'
}

detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    toolVersion = "1.22.0"
    allRules = true // activate all available (even unstable) rules.
    config = files("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt
}

tasks.withType(Detekt).configureEach {
    reports {
        html.required.set(true) // observe findings in your browser with structure and code snippets
        xml.required.set(true) // checkstyle like format mainly for integrations like Jenkins
        txt.required.set(true) // similar to the console output, contains issue signature to manually edit baseline files
        sarif.required.set(true) // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning
        md.required.set(true) // simple Markdown format
    }
}


tasks.withType(Detekt).configureEach {
    jvmTarget = '1.8'
}
tasks.withType(DetektCreateBaselineTask).configureEach {
    jvmTarget = '1.8'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
